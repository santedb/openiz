-- CREATE EXTENSIONS
-- CREATE EXTENSION PGCRYPTO;

-- SECURITY USER CLASS CODES. THESE ARE USED TO IDENTIFY THE USER CLASSES AND ARE USED
-- TO DIFFERENTIATE THE CLASSES OF USERS
CREATE TABLE SEC_USR_CLS_CDTBL (
    CLS_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(),
    MNEMONIC VARCHAR(32) NOT NULL,
    CONSTRAINT PK_SEC_USR_CLS_CDTBL PRIMARY KEY (CLS_ID)
);

INSERT INTO SEC_USR_CLS_CDTBL (CLS_ID, MNEMONIC) VALUES ('33932B42-6F4B-4659-8849-6ACA54139D8E','HumanUser');
INSERT INTO SEC_USR_CLS_CDTBL (CLS_ID, MNEMONIC) VALUES ('E9CD4DAD-2759-4022-AB07-92FCFB236A98','ApplictionUser');
INSERT INTO SEC_USR_CLS_CDTBL (CLS_ID, MNEMONIC) VALUES ('9F71BB34-9691-440F-8249-9C831EA16D58','SystemUser');

-- SECURITY USER TABLE IS USED BY THE SECURITY SUBSYSTEM AND IS OFTEN
-- LINKED TO A USER ENTITY, DEVICE, OR OTHER ENTITY IN THE CLINICAL 
-- DATA MODEL
CREATE TABLE SEC_USR_TBL (
    USR_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- THE UNIQUE IDENTIFIER FOR THE USER
    CLS_ID UUID NOT NULL DEFAULT '33932B42-6F4B-4659-8849-6ACA54139D8E', -- THE USER CLASSIFICATION
    USR_NAME VARCHAR(128) NOT NULL, -- THE USERNAME OF THE USER
    EMAIL VARCHAR(256), -- THE EMAIL ADDRESS OF THE USER
    EMAIL_CNF BOOLEAN NOT NULL DEFAULT FALSE, -- WHETHER THE USERS EMAIL ADDRESS HAS BEEN CONFIRMED
    PHN_NUM VARCHAR(128), -- THE PRIMARY CONTACT NUMBER FOR SECURITY PURPOSES
    PHN_CNF BOOLEAN NOT NULL DEFAULT FALSE, -- INDICATES WHETHER THE SECURITY PHONE NUMBER HAS BEEN CONFIRMED
    TFA_ENABLED BOOLEAN NOT NULL DEFAULT FALSE, -- INDICATES WHETHER TWO FACTOR AUTHENTICATION IS REQUIRED FOR THIS ACCOUNT
    LOCKED TIMESTAMPTZ, -- TRUE IF THE ACCOUNT HAS BEEN LOCKED
    PASSWD VARCHAR(128) NOT NULL, -- THE PASSWORD OF THE USER
    SEC_STMP VARCHAR(128) NOT NULL, -- THE SECURITY STAMP WHICH IS USED AS A VERIFICATION THAT THE USER INFORMATION HAS CHANGED
    FAIL_LOGIN INT NOT NULL DEFAULT 0, -- THE NUMBER OF TIMES THAT THE USER HAS FAILED TO LOGIN
    LAST_LOGIN_UTC TIMESTAMPTZ, -- THE LAST TIME THAT THE USER SUCCESSFULLY LOGGED IN
    CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIME THAT THE USER ACCOUNT WAS CREATED
    CRT_USR_ID UUID, -- THE USER WHICH CREATED THIS USER ACCOUNT
    OBSLT_UTC TIMESTAMPTZ, -- THE TIME THAT THE USER RECORD WAS OBSOLETED
    OBSLT_USR_ID UUID, -- THE USER WHICH OBSOLETED THIS USER ACCOUNT
    UPD_UTC TIMESTAMPTZ, -- THE TIME WHEN THIS USER RECORD WAS LAST UPDATED
    UPD_USR_ID UUID, -- THE USER ID WHICH WAS RESPONSIBLE FOR THE UPDATE
    CONSTRAINT PK_SEC_USR PRIMARY KEY (USR_ID),
    CONSTRAINT FK_SEC_USR_OBSLT_USR_ID FOREIGN KEY(OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT FK_SEC_USR_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT FK_SEC_USR_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT CK_SEC_USR_OBSLT_USR CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
    CONSTRAINT CK_SEC_USR_UPD_USR CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL),
    CONSTRAINT FK_SEC_USR_USR_CLS_ID FOREIGN KEY (CLS_ID) REFERENCES SEC_USR_CLS_CDTBL(CLS_ID)
);
   
-- Create a system user
INSERT INTO SEC_USR_TBL (USR_ID, USR_NAME, PASSWD, SEC_STMP, CLS_ID) VALUES ('fadca076-3690-4a6e-af9e-f1cd68e8c7e8', 'SYSTEM','XXXX','XXXX', '9F71BB34-9691-440F-8249-9C831EA16D58');
-- Create the anonymous user
INSERT INTO SEC_USR_TBL (USR_ID, USR_NAME, PASSWD, SEC_STMP, CLS_ID) VALUES ('C96859F0-043C-4480-8DAB-F69D6E86696C', 'ANONYMOUS','XXXX','XXXX', '9F71BB34-9691-440F-8249-9C831EA16D58');    

-- Enforce SecurityUser
UPDATE SEC_USR_TBL SET CRT_USR_ID = 'C96859F0-043C-4480-8DAB-F69D6E86696C';
ALTER TABLE SEC_USR_TBL ALTER COLUMN CRT_USR_ID SET NOT NULL;

CREATE UNIQUE INDEX SEC_USR_NAME_IDX ON SEC_USR_TBL(USR_NAME);
CREATE INDEX SEC_USR_NAME_PWD_IDX ON SEC_USR_TBL(USR_NAME, PASSWD);

-- SECURITY USER CLAIMS
CREATE TABLE SEC_USR_CLM_TBL (
    CLM_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UNIQUE ID FOR THE CLAIM
    USR_ID UUID NOT NULL, -- THE USER TO WHICH THE CLAIM BELONGS
    CLM_TYP VARCHAR(128) NOT NULL, -- THE TYPE OF CLAIM
    CLM_VAL VARCHAR(128) NOT NULL, -- THE VALUE OF THE CLAIM
    CONSTRAINT PK_SEC_USR_CLM_TBL PRIMARY KEY (CLM_ID),
    CONSTRAINT FK_SEC_USR_CLM_SEC_USR_TBL FOREIGN KEY (USR_ID) REFERENCES SEC_USR_TBL(USR_ID)
);

CREATE INDEX SEC_USR_CLM_USR_ID_IDX ON SEC_USR_CLM_TBL(USR_ID);

-- LINK TO EXTERNAL IDENTIFIER TOKENS
CREATE TABLE SEC_USR_EXTRN_LGN_TBL (
    LGN_PVDR VARCHAR(128) NOT NULL, -- THE PROVIDER (GMAIL, LIVE, ETC.)
    PVD_KEY VARCHAR(128) NOT NULL, -- THE PROVIDER KEY
    USR_ID UUID NOT NULL, -- THE USER TO WHICH THE LOGIN PROVIDES
    CONSTRAINT PK_SEC_USR_EXTRN_LGN PRIMARY KEY (LGN_PVDR, PVD_KEY, USR_ID),
    CONSTRAINT FK_SEC_USR_EXTRN_LGN_USR_ID FOREIGN KEY (USR_ID) REFERENCES SEC_USR_TBL(USR_ID)
);

-- SECURITY ROLES ARE USED TO GROU POLICIES AND ACTIONS AS WELL AS ACCESS TO 
-- PARTICULAR POS APPLICATIONS BASED ON POLICY
CREATE TABLE SEC_ROL_TBL (
    ROL_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UNIQUE ID OF THE ROLE
    ROL_NAME VARCHAR(50) NOT NULL, -- THE NAME OF THE ROLE
    DESCR VARCHAR(256), -- THE DESCRIPTION OF THE ROLE
    CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME OF THE ROLE
    CRT_USR_ID UUID NOT NULL, -- THE USER WHICH CREATE THE ROLE
    OBSLT_UTC TIMESTAMPTZ, -- THE TIME THAT THE ROLE WAS OBSOLETED
    OBSLT_USR_ID UUID, -- THE USER WHICH OBSOLETED THE ROLE
    UPD_UTC TIMESTAMPTZ, -- THE TIME WHEN THE ROLE WAS UPDATED
    UPD_USR_ID UUID, -- THE USER WHICH UPDATED THE ROLE
    CONSTRAINT PK_SEC_ROL_TBL PRIMARY KEY (ROL_ID),
    CONSTRAINT FK_SEC_ROL_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT FK_SEC_ROL_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT FK_SEC_ROL_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT CK_SEC_ROL_OBSLT_USR CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
    CONSTRAINT CK_SEC_ROL_UPD_USR CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL)
);

-- UNIQUE INDEX ON NAME
CREATE UNIQUE INDEX SEC_ROL_ROL_NAME_IDX ON SEC_ROL_TBL(ROL_NAME);

-- SECURITY USER TO ROLE ASSOCIATION
CREATE TABLE SEC_USR_ROL_ASSOC_TBL (
    USR_ID UUID NOT NULL, -- THE IDENTIFIER OF THE USER
    ROL_ID UUID NOT NULL, -- THE IDENTIFIER OF THE ROLE
    CONSTRAINT PK_SEC_ROL_ASSOC_TBL PRIMARY KEY (USR_ID, ROL_ID),
    CONSTRAINT FK_SEC_ROL_ASSOC_USR_ID FOREIGN KEY (USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT FK_SEC_ROL_ASSOC_ROL_ID FOREIGN KEY (ROL_ID) REFERENCES SEC_ROL_TBL(ROL_ID)
);

CREATE INDEX SEC_USR_ROL_ASSOC_USR_ID_IDX ON SEC_USR_ROL_ASSOC_TBL(USR_ID);

-- POLICY TABLE (SEE OIZ DESIGN DOCUMENTATION)
CREATE TABLE SEC_POL_TBL (
    POL_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- THE UNIQUE IDENTIFIER OF THE POLICY
    OID VARCHAR(128) NOT NULL, -- THE OID FOR THE POLICY
    POL_NAME VARCHAR(64) NOT NULL, -- THE NAME OF THE POLICY
    HDLR_CLS VARCHAR(256), -- THE HANDLER CLASS
    IS_PUB BOOLEAN NOT NULL DEFAULT FALSE, -- WHETHER THE POLICY IS INTERNAL OR SHOULD BE DISCLOSED
    IS_ELEV BOOLEAN NOT NULL DEFAULT FALSE, -- WHETHER THE POLICY CAN BE ELEVATED OVER
    CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE DATE THE POLICY WAS CREATED
    CRT_USR_ID UUID NOT NULL, -- THE USER THAT CREATED THE ROLE
    OBSLT_UTC TIMESTAMPTZ, -- THE DATE THE POLICY WAS OBSOLETED
    OBSLT_USR_ID UUID, -- THE OBSOLTION USER
    CONSTRAINT PK_SEC_POL_TBL PRIMARY KEY (POL_ID),
    CONSTRAINT FK_SEC_POL_CRT_UTC FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
    CONSTRAINT FK_SEC_POL_OBSLT_UTC FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID)
);

CREATE UNIQUE INDEX SEC_OID_IDX ON SEC_POL_TBL(OID);

-- BUILT IN OPENIZ POLICIES
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('da73c05a-3159-48c8-bbcb-741911d91cd2', '1.3.6.1.4.1.33349.3.1.5.9.2', 'Unrestricted All', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('ea73c05a-3159-48c8-bbcb-741911d91cd2', '1.3.6.1.4.1.33349.3.1.5.9.2.0', 'Unrestricted Administrative Function', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('d80ac1cf-3d6e-429f-a4a0-88c0bbbc839d', '1.3.6.1.4.1.33349.3.1.5.9.2.0.1', 'Change Password', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('9c0d65ac-613e-4a67-8bc6-5ce2c0b42160', '1.3.6.1.4.1.33349.3.1.5.9.2.0.2', 'Create Role', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('79bcc227-0d13-4fbf-a83e-f2b9fce34151', '1.3.6.1.4.1.33349.3.1.5.9.2.0.3', 'Alter Role', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('ab8642cb-28e4-4e9e-bd7b-d6dc72b729b2', '1.3.6.1.4.1.33349.3.1.5.9.2.0.4', 'Create Identity', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('bb8642cb-28e4-4e9e-bd7b-d6dc72b729b2', '1.3.6.1.4.1.33349.3.1.5.9.2.0.5', 'Create Device', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('cb8642cb-28e4-4e9e-bd7b-d6dc72b729b2', '1.3.6.1.4.1.33349.3.1.5.9.2.0.6', 'Create Application', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('db8642cb-28e4-4e9e-bd7b-d6dc72b729b2', '1.3.6.1.4.1.33349.3.1.5.9.2.0.7', 'Administer Concept Dictionary', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('eb8642cb-28e4-4e9e-bd7b-d6dc72b729b2', '1.3.6.1.4.1.33349.3.1.5.9.2.0.8', 'Alter Identity', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');

INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('d15b96ab-646c-4c00-9a58-ea09eee67d7c', '1.3.6.1.4.1.33349.3.1.5.9.2.1', 'Login', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('e15b96ab-646c-4c00-9a58-ea09eee67d7c', '1.3.6.1.4.1.33349.3.1.5.9.2.1.0', 'Login as a Service', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');

INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('f6840336-4e20-4bc0-b965-baa6d7c80be3', '1.3.6.1.4.1.33349.3.1.5.9.2.2', 'Unrestricted Clinical Data', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('b81daf47-17a5-465e-a5fd-706b168b0265', '1.3.6.1.4.1.33349.3.1.5.9.2.2.0', 'Query Clinical Data', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('d7276921-a078-4348-95f2-ed3cde83e607', '1.3.6.1.4.1.33349.3.1.5.9.2.2.1', 'Write Clinical Data', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('2e027dee-ede4-4731-b7fa-cb67ae0586be', '1.3.6.1.4.1.33349.3.1.5.9.2.2.2', 'Delete Clinical Data', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('5fb731bf-4e59-4863-80bd-51757d58ea3b', '1.3.6.1.4.1.33349.3.1.5.9.2.2.3', 'Read Clinical Data', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('dea891aa-224d-4859-81b3-c1eb2750067e', '1.3.6.1.4.1.33349.3.1.5.9.2.3', 'Override Disclosure', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('eea891aa-224d-4859-81b3-c1eb2750067e', '1.3.6.1.4.1.33349.3.1.5.9.2.4', 'Unrestricted Metadata', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('fea891aa-224d-4859-81b3-c1eb2750067e', '1.3.6.1.4.1.33349.3.1.5.9.2.4.0', 'Read Metadata', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');

INSERT INTO SEC_POL_TBL (POL_ID, OID, POL_NAME, CRT_USR_ID) VALUES ('0ea891aa-224d-4859-81b3-c1eb2750067e', '1.3.6.1.4.1.33349.3.1.5.9.2.10', 'Access Client Administrative Function', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');

-- SECURITY ROLE TO POLICY ASSOCIATIVE ENTITY
CREATE TABLE SEC_ROL_POL_ASSOC_TBL (
	SEC_POL_INST_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UNIQUE IDENTIFIER
	ROL_ID UUID NOT NULL, -- THE ROLE TO WHICH THE POLICY APPLIES
	POL_ID UUID NOT NULL, -- POLICY IDENTIFIER
	POL_ACT INT NOT NULL DEFAULT 0 CHECK (POL_ACT < 3), -- POLICY ACTIONS
	CONSTRAINT PK_SEC_POL_ROL_ASSOC PRIMARY KEY (SEC_POL_INST_ID),
	CONSTRAINT FK_SEC_POL_ROL_ASSOC_ROL_ID FOREIGN KEY (ROL_ID) REFERENCES SEC_ROL_TBL(ROL_ID),
	CONSTRAINT FK_SEC_POL_ROL_ASSOC_POL_ID FOREIGN KEY (POL_ID) REFERENCES SEC_POL_TBL(POL_ID)
);

CREATE INDEX SEC_POL_ROL_ASSOC_ROL_ID_IDX ON SEC_ROL_POL_ASSOC_TBL(ROL_ID);
CREATE UNIQUE INDEX SEC_POL_ROL_ASSOC_POL_ROL_IDX ON SEC_ROL_POL_ASSOC_TBL(ROL_ID, POL_ID);

-- INSERT THE DEFAULT ASSOCIATIONS
-- CREATE USERS ROLE
INSERT INTO SEC_ROL_TBL (ROL_ID, ROL_NAME, DESCR, CRT_USR_ID) VALUES ('f4e58ae8-8bbd-4635-a6d4-8a195b143436', 'USERS', 'Group for users who have login access', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('d15b96ab-646c-4c00-9a58-ea09eee67d7c', 'f4e58ae8-8bbd-4635-a6d4-8a195b143436', 2); -- GRANT Login

-- CREATE ADMINISTRATORS ROLE
INSERT INTO SEC_ROL_TBL (ROL_ID, ROL_NAME, DESCR, CRT_USR_ID) VALUES ('f6d2ba1d-5bb5-41e3-b7fb-2ec32418b2e1', 'ADMINISTRATORS', 'Group for users who have administrative access', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('ea73c05a-3159-48c8-bbcb-741911d91cd2', 'f6d2ba1d-5bb5-41e3-b7fb-2ec32418b2e1', 2); -- GRANT Access Administrative Function
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('d15b96ab-646c-4c00-9a58-ea09eee67d7c', 'f6d2ba1d-5bb5-41e3-b7fb-2ec32418b2e1', 2); -- GRANT Login
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('f6840336-4e20-4bc0-b965-baa6d7c80be3', 'f6d2ba1d-5bb5-41e3-b7fb-2ec32418b2e1', 0); -- DENY Unrestricted Clinical Data
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('dea891aa-224d-4859-81b3-c1eb2750067e', 'f6d2ba1d-5bb5-41e3-b7fb-2ec32418b2e1', 0); -- DENY Override disclosure
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('0ea891aa-224d-4859-81b3-c1eb2750067e', 'f6d2ba1d-5bb5-41e3-b7fb-2ec32418b2e1', 2); -- GRANT Local Administrator
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('fea891aa-224d-4859-81b3-c1eb2750067e', 'f6d2ba1d-5bb5-41e3-b7fb-2ec32418b2e1', 2); -- GRANT Read Metadata Administrator

-- CLINICAL STAFF
INSERT INTO SEC_ROL_TBL (ROL_ID, ROL_NAME, DESCR, CRT_USR_ID) VALUES ('43167DCB-6F77-4F37-8222-133E675B4434', 'CLINICAL_STAFF', 'Group for clinic staff', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('ea73c05a-3159-48c8-bbcb-741911d91cd2', '43167DCB-6F77-4F37-8222-133E675B4434', 0); -- GRANT Access Administrative Function
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('d15b96ab-646c-4c00-9a58-ea09eee67d7c', '43167DCB-6F77-4F37-8222-133E675B4434', 2); -- GRANT Login
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('f6840336-4e20-4bc0-b965-baa6d7c80be3', '43167DCB-6F77-4F37-8222-133E675B4434', 2); -- GRANT Unrestricted Clinical Data
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('dea891aa-224d-4859-81b3-c1eb2750067e', '43167DCB-6F77-4F37-8222-133E675B4434', 0); -- DENY Override disclosure
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('fea891aa-224d-4859-81b3-c1eb2750067e', '43167DCB-6F77-4F37-8222-133E675B4434', 2); -- GRANT Read Metadata Administrator

-- CREATE ROLE SYSTEM WHICH IS DENIED LOGIN
INSERT INTO SEC_ROL_TBL (ROL_ID, ROL_NAME, DESCR, CRT_USR_ID) VALUES ('c3ae21d2-fc23-4133-ba42-b0e0a3b817d7', 'SYSTEM', 'Group for user SYSTEM. Identifies the functions that internal system functions have access to. EDITING THIS ROLE MAY CAUSE SYSTEM FAILURE', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_USR_ROL_ASSOC_TBL (ROL_ID, USR_ID) VALUES ('c3ae21d2-fc23-4133-ba42-b0e0a3b817d7', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('ea73c05a-3159-48c8-bbcb-741911d91cd2', 'c3ae21d2-fc23-4133-ba42-b0e0a3b817d7', 2); -- GRANT Access Administrative Function
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('d15b96ab-646c-4c00-9a58-ea09eee67d7c', 'c3ae21d2-fc23-4133-ba42-b0e0a3b817d7', 0); -- DENY Login
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('f6840336-4e20-4bc0-b965-baa6d7c80be3', 'c3ae21d2-fc23-4133-ba42-b0e0a3b817d7', 2); -- GRANT Unrestricted Clinical Data
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('dea891aa-224d-4859-81b3-c1eb2750067e', 'c3ae21d2-fc23-4133-ba42-b0e0a3b817d7', 0); -- DENY Override disclosure
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('fea891aa-224d-4859-81b3-c1eb2750067e', 'c3ae21d2-fc23-4133-ba42-b0e0a3b817d7', 2); -- GRANT Read Metadata Administrator

-- CREATE ROLE ANONYMOUS WHICH IS DENIED ALL CLINICAL 
INSERT INTO SEC_ROL_TBL (ROL_ID, ROL_NAME, DESCR, CRT_USR_ID) VALUES ('dadbd858-13c5-44a3-ad7d-1c44cecaa4b6', 'ANONYMOUS', 'Group for user ANONYMOUS. Identifies the functions that non-logged in users have access to. EDITING THIS ROLE MAY INTRODUCE SECURITY BREACHES', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_USR_ROL_ASSOC_TBL (ROL_ID, USR_ID) VALUES ('dadbd858-13c5-44a3-ad7d-1c44cecaa4b6', 'C96859F0-043C-4480-8DAB-F69D6E86696C');
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('ea73c05a-3159-48c8-bbcb-741911d91cd2', 'dadbd858-13c5-44a3-ad7d-1c44cecaa4b6', 0); -- DENYAccess Administrative Function
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('d15b96ab-646c-4c00-9a58-ea09eee67d7c', 'dadbd858-13c5-44a3-ad7d-1c44cecaa4b6', 0); -- DENY Login
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('f6840336-4e20-4bc0-b965-baa6d7c80be3', 'dadbd858-13c5-44a3-ad7d-1c44cecaa4b6', 0); -- DENY Unrestricted Clinical Data
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('dea891aa-224d-4859-81b3-c1eb2750067e', 'dadbd858-13c5-44a3-ad7d-1c44cecaa4b6', 0); -- DENY Override disclosure
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('fea891aa-224d-4859-81b3-c1eb2750067e', 'dadbd858-13c5-44a3-ad7d-1c44cecaa4b6', 0); -- GRANT Read Metadata Administrator

-- CREATE SYNCHRONIZERS ROLE
INSERT INTO SEC_ROL_TBL (ROL_ID, ROL_NAME, DESCR, CRT_USR_ID) VALUES ('54B7677C-682B-425F-A937-3AA03D5951F1', 'SYNCHRONIZERS', 'Group for user SYNCHRONIZERS. Identifies the functions that are used for synchronization. EDITING THIS ROLE MAY INTRODUCE SECURITY BREACHES', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('e15b96ab-646c-4c00-9a58-ea09eee67d7c', '54B7677C-682B-425F-A937-3AA03D5951F1', 2); -- GRANT AS Service Login
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('f6840336-4e20-4bc0-b965-baa6d7c80be3', '54B7677C-682B-425F-A937-3AA03D5951F1', 2); -- GRANT Unrestricted Clinical Data
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('fea891aa-224d-4859-81b3-c1eb2750067e', '54B7677C-682B-425F-A937-3AA03D5951F1', 2); -- GRANT Read Metadata
INSERT INTO SEC_ROL_POL_ASSOC_TBL (POL_ID, ROL_ID, POL_ACT)  VALUES ('dea891aa-224d-4859-81b3-c1eb2750067e', '54B7677C-682B-425F-A937-3AA03D5951F1', 0); -- DENY Override disclosure

-- SECURITY DEVICE WHICH IS HOW DEVICES AUTHENTICATE THEMSELVES
CREATE TABLE SEC_DEV_TBL (
	DEV_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UNIQUE IDENTIFIER FOR THE DEVICE
	DEV_SCRT VARCHAR(64) NOT NULL, -- THE SECRET OF THE DEVICE (EX: X509 THUMB)
	DEV_PUB_ID VARCHAR(64) NOT NULL, -- THE PUBLIC IDENTIIFER OF THE DEVICE
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE DATE THE DEVICE WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER WHICH CREATED TEH DEVICE
	OBSLT_UTC TIMESTAMPTZ, -- THE TIME THAT THE DEVICE WAS OBSOLETED
	OBSLT_USR_ID UUID, -- THE USER WHICH OBSOLETD THE DEVICE
	RPLC_DEV_ID UUID, -- THE DEVICE THAT THIS DEVICE REPLACES.
	CONSTRAINT PK_SEC_DEV_TBL PRIMARY KEY (DEV_ID),
	CONSTRAINT FK_SEC_DEV_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_SEC_DEV_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_SEC_DEV_RPLC_DEV_ID FOREIGN KEY (RPLC_DEV_ID) REFERENCES SEC_DEV_TBL(DEV_ID),
    CONSTRAINT CK_SEC_DEV_OBSLT_USR CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL)
);

CREATE UNIQUE INDEX SEC_DEV_PUB_ID_IDX ON SEC_DEV_TBL(DEV_PUB_ID);
CREATE UNIQUE INDEX SEC_DEV_SCRT_IDX ON SEC_DEV_TBL(DEV_SCRT);

-- SECURITY APPLICATION WHICH IS HOW APPLICATIONS AUTHENTICATE THEMSELVES
CREATE TABLE SEC_APP_TBL (
	APP_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UNIQUE IDENTIIFER FOR THE DEV
	APP_PUB_ID VARCHAR(64) NOT NULL, -- THE PUBLIC IDENTIFIER FOR THE APP
	APP_SCRT VARCHAR(64) NOT NULL, -- THE APPLICATION SECRET
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME OF THE APP
	CRT_USR_ID UUID NOT NULL, -- THE USER WHICH IS RESPONSIBLE FOR THE CREATION OF THE APP
	OBSLT_UTC TIMESTAMPTZ, -- OBSOLETION TIME
	OBSLT_USR_ID UUID, -- THE OBSOLETION USER
	RPLC_APP_ID UUID, -- THE APPLICATION WICH THIS APPLICATION REPLACES
	CONSTRAINT PK_SEC_APP_TBL PRIMARY KEY (APP_ID),
	CONSTRAINT FK_SEC_APP_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_SEC_APP_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_SEC_APP_RPLC_APP_ID FOREIGN KEY (RPLC_APP_ID) REFERENCES SEC_APP_TBL(APP_ID),
	CONSTRAINT CK_SEC_APP_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL)
);

CREATE UNIQUE INDEX SEC_APP_APP_PUB_ID_IDX ON SEC_APP_TBL(APP_PUB_ID);
CREATE INDEX SEC_APP_APP_SCRT_IDX ON SEC_APP_TBL(APP_SCRT);

-- SECURITY DEVICE TO POLICY ASSOC
CREATE TABLE SEC_DEV_POL_ASSOC_TBL (
	SEC_POL_INST_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UUID FOR THE INSTANCES
	DEV_ID UUID NOT NULL, -- DEVICE IDENTIFIER TO WHICH THE POLICY APPLIES
	POL_ID UUID NOT NULL, -- POLICY IDENTIIFER TO WHICH THE POLICY APPLIES
	POL_ACT INT NOT NULL CHECK (POL_ACT < 3), -- POLICY ACTION EITHER GRANT, DENY OR ELEVATE
	CONSTRAINT PK_SEC_DEV_POL_ASSOC_TBL PRIMARY KEY (SEC_POL_INST_ID), 
	CONSTRAINT FK_SEC_DEV_POL_ASSOC_DEV_ID FOREIGN KEY (DEV_ID) REFERENCES SEC_DEV_TBL(DEV_ID),
	CONSTRAINT FK_SEC_DEV_POL_ASSOC_POL_ID FOREIGN KEY (POL_ID) REFERENCES SEC_POL_TBL(POL_ID)
);

CREATE INDEX SEC_DEV_POL_ASSOC_DEV_ID_IDX ON SEC_DEV_POL_ASSOC_TBL(DEV_ID);

-- SECURITY APPLICATION TO POLICY INSTANCE ASSOCIATION
CREATE TABLE SEC_APP_POL_ASSOC_TBL (
	SEC_POL_INST_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UUID FOR THE INSTANCE
	APP_ID UUID NOT NULL, -- APPLICATION IDENTIFIER TO WHICH THE POLICY APPLIES
	POL_ID UUID NOT NULL, -- THE POLICY TO WHICH THE POLICY INSTANCE APPLIES
	POL_ACT INT NOT NULL CHECK (POL_ACT < 3), -- POLICY ACTION
	CONSTRAINT PK_SEC_APP_POL_ASSOC_TBL PRIMARY KEY (SEC_POL_INST_ID),
	CONSTRAINT FK_SEC_APP_POL_ASSOC_APP_ID FOREIGN KEY (APP_ID) REFERENCES SEC_APP_TBL(APP_ID),
	CONSTRAINT FK_SEC_APP_POL_ASSOC_POL_ID FOREIGN KEY (POL_ID) REFERENCES SEC_POL_TBL(POL_ID)
);

CREATE INDEX SEC_APP_POL_ASSOC_APP_ID_IDX ON SEC_APP_POL_ASSOC_TBL(APP_ID);

-- PHONETIC ALGORITHMS TABLE
CREATE TABLE PHON_ALG_TBL (
	ALG_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UNIQUE IDENTIFIER FOR THE ALGORITHM
	ALG_NAME VARCHAR(32) NOT NULL, -- NAME OF THE ALGORITHM
	HDLR_CLS VARCHAR(256), -- THE HANDLER CLASS WHICH CAN GENERATE THE ALGORITHM CODES
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME
	CRT_USR_ID UUID NOT NULL, -- THE USER WHICH CREATED THE ALGORITHM
	UPD_UTC TIMESTAMPTZ, -- THE UPDATED TIME FOR THE ALGORITHM
	UPD_USR_ID UUID, -- THE USER WHICH UPDATED THE ALGORITHM
	OBSLT_UTC TIMESTAMPTZ, -- THE TIMESTAMP OF THE OBSOLETION
	OBSLT_USR_ID UUID, -- THE USER WHICH OBSOLETED THE ALGORITHM
	CONSTRAINT PK_PHON_ALG_TBL PRIMARY KEY (ALG_ID),
	CONSTRAINT FK_PHON_ALG_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_PHON_ALG_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_PHON_ALG_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT CK_PHON_ALG_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
	CONSTRAINT CK_PHON_ALG_UPD_USR CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL)
);

CREATE INDEX PHON_ALG_NAME_IDX ON PHON_ALG_TBL(ALG_NAME);

INSERT INTO PHON_ALG_TBL (ALG_ID, ALG_NAME, HDLR_CLS, CRT_USR_ID)  VALUES ('402CD339-D0E4-46CE-8FC2-12A4B0E17226', 'NONE', NULL, 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO PHON_ALG_TBL (ALG_ID, ALG_NAME, HDLR_CLS, CRT_USR_ID)  VALUES ('3352a79a-d2e0-4e0c-9b48-6fd2a202c681', 'SOUNDEX', 'OpenIZ.Core.Services.Impl.PhoneticAlgorithms.SoundexPhoneticAlgorithmHandler, OpenIZ.Core, Version=0.6.0.0', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO PHON_ALG_TBL (ALG_ID, ALG_NAME, HDLR_CLS, CRT_USR_ID)  VALUES ('d79a4dc6-66a6-4602-8fcb-7dc09a895793', 'METAPHONE', 'OpenIZ.Core.Services.Impl.PhoneticAlgorithms.MetaphonePhoneticAlgorithmHandler, OpenIZ.Core, Version=0.6.0.0', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');

-- PHONETIC VALUES TABLE ASSOCIATES STRINGS WITH VALUES
CREATE TABLE PHON_VAL_TBL (
	PHON_VAL_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), -- UNIQUE IDENTIFIER FORHTE VALUE
	VAL VARCHAR(64) NOT NULL, -- THE VALUE OF THE CODE IN HUMAN READABLE FORM
	PHON_CS VARCHAR(32), -- THE PHONETIC CODE OF THE VALUE
	ALG_ID UUID NOT NULL, -- THE PHONETIC ALGORITHM USED TO GENERATE THE CODE
	CONSTRAINT PK_PHON_VAL_TBL PRIMARY KEY (PHON_VAL_ID),
	CONSTRAINT FK_PHON_VAL_ALG_ID FOREIGN KEY (ALG_ID) REFERENCES PHON_ALG_TBL(ALG_ID)
);

-- GENERIC CONCEPTS TABLE
CREATE TABLE CD_TBL (
	CD_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(),
	IS_SYS BOOLEAN NOT NULL DEFAULT FALSE, -- WHETHER THE CONCEPT IS A SYSTEM CONCEPT
	CONSTRAINT PK_CD_TBL PRIMARY KEY (CD_ID)
);

-- CONCEPT CLASSIFICATIONS TABLE
CREATE TABLE CD_CLS_TBL (
	CLS_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(),
	CLS_NAME VARCHAR(50) NOT NULL, -- THE NAME OF THE CLASS
	MNEMONIC VARCHAR(16) NOT NULL, -- THE MNEMONIC USED BY THE SYSTEM TO LOCATE CONCEPTS
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIME THAT HTE CONCEPT CLASS WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER WHICH CREATED THE CONCEPT CLASS
	UPD_UTC TIMESTAMPTZ, -- THE TIME WHEN THE CONCEPT CLASS WAS CREATE
	UPD_USR_ID UUID, -- THE USER ID THAT UPDATED THE CONCEPT CLASS
	OBSLT_UTC TIMESTAMPTZ, -- THE OBSOLETION TIME OF THE CONCEPT
	OBSLT_USR_ID UUID, -- THE USER WHICH OBSOLETED THE CONCEPT
	CONSTRAINT PK_CD_CLS_TBL PRIMARY KEY (CLS_ID),
	CONSTRAINT FK_CD_CLS_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_CLS_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_CLS_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT CK_CD_CLS_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
	CONSTRAINT CK_CD_CLS_UPD_USR_ID CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL)
);

CREATE UNIQUE INDEX CD_CLS_MNEMONIC_IDX ON CD_CLS_TBL(MNEMONIC);

-- CONCEPT SETS REPRESENT A SET OF CONCEPTS LOGICALLY GROUPED TOGEHTHER
CREATE TABLE CD_SET_TBL (
	SET_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), 
	SET_NAME VARCHAR(50) NOT NULL, -- THE NAME OF THE SET
	MNEMONIC VARCHAR(64) NOT NULL, -- THE MNEMONIC (SYSTEM NAME) OF THE SET
	OID VARCHAR(64) NOT NULL, -- THE OID (EXTERNAL ID) OF THE CONCEPT SET
	URL VARCHAR(256) NOT NULL, -- THE DEFINITION URL OF THE CONCEPT SET
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME OF THE CONCEPT SET
	CRT_USR_ID UUID NOT NULL, -- THE USER WHICH CREATED THE CONCEPT SET
	OBSLT_UTC TIMESTAMPTZ, -- THE TIME THAT THE SET WAS OBSOLETED
	OBSLT_RSN TEXT, -- THE REASON THE SET WAS OBSOLETED
	OBSLT_USR_ID UUID, -- THE OBSOLETION USER IDENTIFIER
	UPD_UTC TIMESTAMPTZ, -- THE UPDATED TIME OF THE CONCEPT SET
	UPD_USR_ID UUID, -- THE UUID OF THE USER WHICH UPDATED THE CONCEPT SET
	CONSTRAINT PK_CD_SET_TBL PRIMARY KEY (SET_ID), 
	CONSTRAINT FK_CD_SET_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_SET_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_SET_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT CK_CD_SET_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
	CONSTRAINT CK_CD_SET_UPD_USR_ID CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL)
);

CREATE UNIQUE INDEX CD_SET_OID_IDX ON CD_SET_TBL(OID);
CREATE UNIQUE INDEX CD_SET_URL_IDX ON CD_SET_TBL(URL);
CREATE UNIQUE INDEX CD_SET_MNEMONIC_IDX ON CD_SET_TBL(MNEMONIC);

-- CONCEPT SET MEMBERS ASSOCIATION
CREATE TABLE CD_SET_MEM_ASSOC_TBL (
	SET_ID UUID NOT NULL, -- THE CONCEPT SET TO WHICH THE CONCEPT BELONGS
	CD_ID UUID NOT NULL, -- THE CONCEPT WHICH BELONGS TO THE SET.,
	CONSTRAINT PK_CD_SET_MEM_ASSOC_TBL PRIMARY KEY (SET_ID, CD_ID),
	CONSTRAINT FK_CD_SET_MEM_ASSOC_CD_SET FOREIGN KEY (SET_ID) REFERENCES CD_SET_TBL(SET_ID),
	CONSTRAINT FK_CD_SET_MEM_ASSOC_CD_ID FOREIGN KEY (CD_ID) REFERENCES CD_TBL(CD_ID)
);

CREATE INDEX CD_SET_MEM_ASSOC_CD_SET_ID_IDX ON CD_SET_MEM_ASSOC_TBL(SET_ID);
CREATE INDEX CD_SET_MEM_ASSOC_CD_ID_IDX ON CD_SET_MEM_ASSOC_TBL(CD_ID);

-- VERSION SEQUENCING
CREATE SEQUENCE CD_VRSN_SEQ START WITH 1 INCREMENT BY 1;

-- CONCEPT VERSIONS
CREATE TABLE CD_VRSN_TBL (
	CD_VRSN_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), 
	VER_SEQ_ID NUMERIC(20) NOT NULL UNIQUE DEFAULT (nextval('CD_VRSN_SEQ')),-- VERSION SEQUENCE
	CD_ID UUID NOT NULL, -- THE CONCEPT TO WHICH THE VERSION APPLIES
	STAT_CD_ID UUID NOT NULL, -- THE STATUS OF THE CONCEPT AT THE CURRENT STATE
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIME THE VERSION WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER WHICH WAS RESPONSIBLE FOR THE CREATION OF THE CONCEPT VERSION
	OBSLT_UTC TIMESTAMPTZ, -- THE TIME THAT OBSOLETED THIS VERSION
	OBSLT_USR_ID UUID, -- THE USER WHICH OBSOLETED THIS VERSION
	RPLC_VRSN_ID UUID, -- THE VERSION THAT THIS VERSION REPLACES
	CLS_ID UUID NOT NULL, -- THE CONCEPT CLASSIFICATION OF THE CONCEPT AT THE CURRENT VERSION
	MNEMONIC VARCHAR(64) NOT NULL, -- THE MNEMONIC OF THE CONCEPT AT THE CURRENT VERSION
	CONSTRAINT PK_CD_VRSN_TBL PRIMARY KEY (CD_VRSN_ID),
	CONSTRAINT FK_CD_VRSN_STAT_CD_ID FOREIGN KEY (STAT_CD_ID) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_CD_VRSN_CD_ID FOREIGN KEY (CD_ID) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_CD_VRSN_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_VRSN_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_VRSN_CLS_ID FOREIGN KEY (CLS_ID) REFERENCES CD_CLS_TBL(CLS_ID),
	CONSTRAINT FK_CD_VRSN_RPLC_VRSN_ID FOREIGN KEY (RPLC_VRSN_ID) REFERENCES CD_VRSN_TBL(CD_VRSN_ID),
	CONSTRAINT CK_CD_VRSN_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL)
);

CREATE INDEX CD_VRSN_CD_ID_IDX ON CD_VRSN_TBL(CD_ID);
CREATE INDEX CD_VRSN_MNEMONIC_IDX ON CD_VRSN_TBL(MNEMONIC);

-- CONCEPT NAME LOCALIZATION TABLE
CREATE TABLE CD_NAME_TBL (
	NAME_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(),
	CD_ID UUID NOT NULL, -- THE CONCEPT THAT THE NAME APPLIES TO
	EFFT_VRSN_SEQ_ID NUMERIC(20) NOT NULL, -- THE VERSION SEQUENCE WHERE THIS BECOMES EFFECTIVE
	OBSLT_VRSN_SEQ_ID NUMERIC(20), -- THE VERSION SEQUENCE WHERE THIS IS NO LONGER EFFECTIVE
	LANG_CS CHAR(2) NOT NULL, -- THE LANGUAGE CODE
	VAL VARCHAR(256) NOT NULL, -- NAME OF THE CODE
	PHON_CS VARCHAR(32), -- THE PHONETIC CODE
	PHON_ALG_ID UUID NOT NULL, -- THE PHONETIC ALGORITHM USED TO GENERATE THE CODE
	CONSTRAINT PK_CD_NAME_TBL PRIMARY KEY (NAME_ID),
	CONSTRAINT FK_CD_NAME_CD_ID FOREIGN KEY (CD_ID) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_CD_NAME_EFFT_VRSN_SEQ FOREIGN KEY (EFFT_VRSN_SEQ_ID) REFERENCES CD_VRSN_TBL(VER_SEQ_ID),
	CONSTRAINT FK_CD_NAME_OBSLT_VRSN_SEQ FOREIGN KEY (OBSLT_VRSN_SEQ_ID) REFERENCES CD_VRSN_TBL(VER_SEQ_ID),
	CONSTRAINT FK_CD_NAME_PHON_ALG_ID FOREIGN KEY (PHON_ALG_ID) REFERENCES PHON_ALG_TBL(ALG_ID)
);

CREATE INDEX CD_NAME_VRSN_IDX ON CD_NAME_TBL(EFFT_VRSN_SEQ_ID, OBSLT_VRSN_SEQ_ID);
CREATE INDEX CD_NAME_VAL_IDX ON CD_NAME_TBL(VAL);
CREATE INDEX CD_NAME_PHON_CS_IDX ON CD_NAME_TBL(PHON_CS);
CREATE INDEX CD_NAME_CD_ID_IDX ON CD_NAME_TBL(CD_ID);

-- CODE SYSTEMS TABLE
CREATE TABLE CD_SYS_TBL (
	CS_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), 
	CS_NAME VARCHAR(256) NOT NULL, -- HUMAN READABLE NAME FOR THE CODESYSTEM
	OID VARCHAR(64) NOT NULL, -- THE OID OF THE CODE SYSTEM
	DOMAIN VARCHAR(50), -- THE ASSIGNING AUTHORITY OF THE COE SYSTEM
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIME THAT THE CODE SYSTEM WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER IDENTIFIER THAT CREATED THE CODE SYSTEM
	OBSLT_UTC TIMESTAMPTZ, -- THE TIMESTAMP OF OBSOLETION
	OBSLT_USR_ID UUID, -- THE USER WHO OBSOLETED
	UPD_UTC TIMESTAMPTZ, -- THE TIMESTAMP OFUPDATING
	UPD_USR_ID UUID, -- THE USER IDENTIIFER WHO UPDATED
	URL VARCHAR(256) NOT NULL, -- THE DEFINITION URL FOR THE CODE SYSTEM
	VER_TXT VARCHAR(10), -- THE VERSION OF THE CODE SYSTEM AS DEFINED BY THE AUTHORITY
	DESCR TEXT, -- THE HUMAN DESCRIPTION OF THE CODE SYSTEM
	CONSTRAINT PK_CD_SYS_TBL PRIMARY KEY (CS_ID),
	CONSTRAINT FK_CD_SYS_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_SYS_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_SYS_OBSLT_USR_ID FOREIGN KEy (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT CK_CD_SYS_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
	CONSTRAINT CK_CD_SYS_UPD_USR_ID CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL)

);


-- INDEX ON CODE SYSTEM
CREATE UNIQUE INDEX CD_SYS_OID_IDX ON CD_SYS_TBL(OID);
CREATE UNIQUE INDEX CD_SYS_URL_IDX ON CD_SYS_TBL(URL);

-- CONCEPT RELATIONSHIP TYPES
CREATE TABLE CD_REL_TYP_CDTBL (
	REL_TYP_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), 
	REL_NAME VARCHAR(50) NOT NULL, -- NAME OF THE RELATIONSHIP TYPE
	MNEMONIC VARCHAR(20) NOT NULL, -- THE UNCHANGING MNEMONIC OF THE RELATIONSHIP
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIME THAT THE RELATION WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER IDENTIFIER THAT CREATED THE RELATION
	OBSLT_UTC TIMESTAMPTZ, -- THE TIMESTAMP OF OBSOLETION
	OBSLT_USR_ID UUID, -- THE USER WHO OBSOLETED
	UPD_UTC TIMESTAMPTZ, -- THE TIMESTAMP OFUPDATING
	UPD_USR_ID UUID, -- THE USER IDENTIIFER WHO UPDATED
	CONSTRAINT PK_CD_REL_TYP_CDTBL PRIMARY KEY (REL_TYP_ID),
	CONSTRAINT FK_CD_REL_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_REL_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_CD_REL_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT CK_CD_REL_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
	CONSTRAINT CK_CD_REL_UPD_USR_ID CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL)
	
);

CREATE INDEX CD_REL_TYP_MNEMONIC_IDX ON CD_REL_TYP_CDTBL(MNEMONIC);

INSERT INTO CD_REL_TYP_CDTBL (REL_TYP_ID, REL_NAME, MNEMONIC, CRT_USR_ID) VALUES ('2c4dafc2-566a-41ae-9ebc-3097d7d22f4a', 'Same as', 'SameAs', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO CD_REL_TYP_CDTBL (REL_TYP_ID, REL_NAME, MNEMONIC, CRT_USR_ID) VALUES ('ad27293d-433c-4b75-88d2-b5360cd95450', 'Inverse of', 'InverseOf', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO CD_REL_TYP_CDTBL (REL_TYP_ID, REL_NAME, MNEMONIC, CRT_USR_ID) VALUES ('a159d45b-3c34-4e1b-9b75-9193a7528ced', 'Member of', 'MemberOf', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');
INSERT INTO CD_REL_TYP_CDTBL (REL_TYP_ID, REL_NAME, MNEMONIC, CRT_USR_ID) VALUES ('ae8b4f2f-009f-4e0d-b35e-5a89555c5947', 'Negation of', 'NegationOf', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8');

-- REFERENCE TERMS
CREATE TABLE REF_TERM_TBL (
	REF_TERM_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(), 
	CS_ID UUID NOT NULL, -- CODE SYSTEM UUID
	MNEMONIC VARCHAR(50) NOT NULL, -- MNEMONIC OF THE REF TERM
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIME THAT THE REF WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER IDENTIFIER THAT CREATED THE REF
	OBSLT_UTC TIMESTAMPTZ, -- THE TIMESTAMP OF OBSOLETION
	OBSLT_USR_ID UUID, -- THE USER WHO OBSOLETED
	UPD_UTC TIMESTAMPTZ, -- THE TIMESTAMP OFUPDATING
	UPD_USR_ID UUID, -- THE USER IDENTIIFER WHO UPDATED
	CONSTRAINT PK_REF_TERM_TBL PRIMARY KEY (REF_TERM_ID),
	CONSTRAINT FK_REF_TERM_CS_ID FOREIGN KEY (CS_ID) REFERENCES CD_SYS_TBL(CS_ID),
	CONSTRAINT FK_REF_TERM_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_REF_TERM_UPD_USR_ID FOREIGN KEY (UPD_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_REF_TERM_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT CK_REF_TERM_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL),
	CONSTRAINT CK_REF_TERM_UPD_USR_ID CHECK (UPD_USR_ID IS NOT NULL AND UPD_UTC IS NOT NULL OR UPD_USR_ID IS NULL AND UPD_UTC IS NULL)
);

CREATE UNIQUE INDEX CD_REF_TERM_MNEMONIC_IDX ON REF_TERM_TBL(MNEMONIC);

-- CONCEPT REFERENCE TERM ASSOCIATION
CREATE TABLE CD_REF_TERM_ASSOC_TBL (
	CD_REF_TERM_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(),
	REF_TERM_ID UUID NOT NULL, -- THE REFERENCE TERM PART OF THIS RELATIONSHIP
	CD_ID UUID NOT NULL, -- THE CONCEPT DEFINITION IDENTIFIER
	EFFT_VRSN_SEQ_ID NUMERIC(20) NOT NULL, -- THE VERSION AT WHICH THE REFERENCE TERM RELATIONSHIP BECAME ACTIVE
	OBSLT_VRSN_SEQ_ID NUMERIC(20), -- THE VERSION AT WHICH THE REFERENCE TERM IS NO LONGER ACTIVE
	REL_TYP_ID UUID NOT NULL, -- THE RELATIONSHIP TYPE IDENTIFIER
	CONSTRAINT PK_CD_REF_TERM_ASSOC_TBL PRIMARY KEY (CD_REF_TERM_ID),
	CONSTRAINT FK_CD_REF_TERM_ASSOC_REF_TERM_ID FOREIGN KEY (REF_TERM_ID) REFERENCES REF_TERM_TBL(REF_TERM_ID),
	CONSTRAINT FK_CD_REF_TERM_ASSOC_CD_ID FOREIGN KEY (CD_ID) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_CD_REF_TERM_ASSOC_EFFT_VRSN_SEQ_ID FOREIGN KEY (EFFT_VRSN_SEQ_ID) REFERENCES CD_VRSN_TBL(VER_SEQ_ID),
	CONSTRAINT FK_CD_REF_TERM_ASSOC_OBSLT_VRSN_SEQ_ID FOREIGN KEY (OBSLT_VRSN_SEQ_ID) REFERENCES CD_VRSN_TBL(VER_SEQ_ID),
	CONSTRAINT FK_CD_REF_TERM_ASSOC_REL_TYP_ID FOREIGN KEY (REL_TYP_ID) REFERENCES CD_REL_TYP_CdTBL(REL_TYP_ID)
);

CREATE INDEX CD_REF_TERM_ASSOC_CD_ID_IDX ON CD_REF_TERM_ASSOC_TBL(CD_ID);
CREATE INDEX CD_REF_TERM_ASSOC_VRSN_IDX ON CD_REF_TERM_ASSOC_TBL(EFFT_VRSN_SEQ_ID, OBSLT_VRSN_SEQ_ID);

-- REFERENCE TERM DISPLAY NAMES 
CREATE TABLE REF_TERM_NAME_TBL (
	REF_TERM_NAME_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(),
	REF_TERM_ID UUID NOT NULL, -- THE REFERENCE TERM ID TO WHICH THE NAME APPLIES
	LANG_CS CHAR(2) NOT NULL, -- THE ISO LANGUAGE CODE FOR WHICH THE NAME APPLIES
	TERM_NAME VARCHAR(256) NOT NULL, -- THE NAME TO BE USED
	CRT_UTC TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIME THE NAME WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER WHICH WAS RESPONSIBLE FOR THE CREATION OF THE NAME
	OBSLT_UTC TIMESTAMPTZ, -- THE TIME THAT OBSOLETED THIS NAME
	OBSLT_USR_ID UUID, -- THE USER WHICH OBSOLETED THIS NAME
	OBSLT_RSN TEXT, -- THE REASON THAT THE TERM NAME WAS OBSOLETED
	PHON_CS VARCHAR(20), -- THE PHONETIC CODE FOR THE NAME
	PHON_ALG_ID UUID NOT NULL, -- THE PHONETIC ALGORITHM FOR THE NAME
	CONSTRAINT PK_REF_TERM_NAME_TBL PRIMARY KEY (REF_TERM_NAME_ID),
	CONSTRAINT FK_REF_TERM_NAME_REF_TERM_ID FOREIGN KEY (REF_TERM_ID) REFERENCES REF_TERM_TBL(REF_TERM_ID),
	CONSTRAINT FK_REF_TERM_NAME_CRT_USR_ID FOREIGN KEY (CRT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT FK_REF_TERM_NAME_OBSLT_USR_ID FOREIGN KEY (OBSLT_USR_ID) REFERENCES SEC_USR_TBL(USR_ID),
	CONSTRAINT CK_REF_TERM_NAME_OBSLT_USR_ID CHECK (OBSLT_USR_ID IS NOT NULL AND OBSLT_UTC IS NOT NULL OR OBSLT_USR_ID IS NULL AND OBSLT_UTC IS NULL)
);

-- INDEX OF REF TERM NAMES
CREATE INDEX REF_TERM_NAME_PHON_CS_IDX ON REF_TERM_NAME_TBL(PHON_CS);
CREATE INDEX REF_TERM_NAME_TERM_NAME_IDX ON REF_TERM_NAME_TBL(TERM_NAME);

-- REFERENCE TERM RELATIONSHIP TABLE
CREATE TABLE CD_REL_ASSOC_TBL (
	CD_REL_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID(),
	SRC_CD_ID UUID NOT NULL, -- THE SOURCE OF THE RELATIONSHIP
	TRG_CD_ID UUID NOT NULL, -- THE TARGET OF THE RELATIONSHIP
	REL_TYP_ID UUID NOT NULL, -- THE TYPE OF RELATIONSHIP
	EFFT_VRSN_SEQ_ID NUMERIC(20) NOT NULL, -- THE VERSION AT WHICH THE RELATIONSHIP BECOMES ACTIVE
	OBSLT_VRSN_SEQ_ID NUMERIC(20), -- THE VERSION AT WHICH THE RELATIONSHIP IS NO LONGER ACTIVE
	CONSTRAINT PK_CD_REL_ASSOC_TBL PRIMARY KEY (CD_REL_ID),
	CONSTRAINT FK_CD_REL_ASSOC_SRC_CD_ID FOREIGN KEY (SRC_CD_ID) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_CD_REL_ASSOC_TRG_CD_ID FOREIGN KEY (TRG_CD_ID) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_CD_REL_ASSOC_REL_TYP_ID FOREIGN KEY (REL_TYP_ID) REFERENCES CD_REL_TYP_CDTBL(REL_TYP_ID),
	CONSTRAINT FK_CD_REL_ASSOC_EFFT_VRSN_SEQ_ID FOREIGN KEY (EFFT_VRSN_SEQ_ID) REFERENCES CD_VRSN_TBL(VER_SEQ_ID),
	CONSTRAINT FK_CD_REL_ASSOC_OBSLT_VRSN_SEQ_ID FOREIGN KEY (OBSLT_VRSN_SEQ_ID) REFERENCES CD_VRSN_TBL(VER_SEQ_ID)
);

-- INDEX FOR RELATIONSHIP
CREATE INDEX CD_REL_ASSOC_VRSN_IDX ON CD_REL_ASSOC_TBL(EFFT_VRSN_SEQ_ID, OBSLT_VRSN_SEQ_ID);
CREATE INDEX CD_REL_ASSOC_SRC_ID_IDX ON CD_REL_ASSOC_TBL(SRC_CD_ID);
CREATE INDEX CD_REL_ASSOC_TRG_ID_IDX ON CD_REL_ASSOC_TBL(TRG_CD_ID);

-- CURRENT CONCEPT VERSION VIEW
CREATE VIEW CD_CUR_VRSN_VW AS
	SELECT CD_VRSN_TBL.*, CD_TBL.IS_SYS, CD_CLS_TBL.MNEMONIC AS CLS_MNEMONIC 
	FROM CD_VRSN_TBL INNER JOIN CD_TBL USING (CD_ID)
		INNER JOIN CD_CLS_TBL USING (CLS_ID)
		WHERE CD_VRSN_TBL.OBSLT_UTC IS NULL;

-- CONCEPT SET MEMBERS VIEW
CREATE VIEW CD_SET_MEM_VW AS
	SELECT CD_SET_TBL.SET_ID, CD_SET_TBL.MNEMONIC AS SET_MNEMONIC, CD_CUR_VRSN_VW.CD_ID, CD_CUR_VRSN_VW.CD_VRSN_ID, CD_CUR_VRSN_VW.MNEMONIC AS CD_MNEMONIC, CD_CUR_VRSN_VW.CLS_MNEMONIC
	FROM CD_SET_MEM_ASSOC_TBL INNER JOIN CD_SET_TBL USING (SET_ID) 
	INNER JOIN CD_CUR_VRSN_VW USING(CD_ID);

-- ASSERT A CONCEPT HAS A PARTICULAR CLASSIFIER
-- @RETURN : TRUE IF THE CLASS CARRIES THE SPECIIFED CLASSIFICATION
-- @PARAM CD_ID_IN : THE UUID OF THE CONCEPT 
-- @PARAM CLS_MNEMONIC_IN : THE CLASS TO ASSERT
CREATE OR REPLACE FUNCTION ASSRT_CD_CLS(
	CD_ID_IN IN UUID,
	CLS_MNEMONIC_IN IN VARCHAR(32)
) RETURNS BOOLEAN AS
$$
BEGIN
	RETURN (SELECT COUNT(*) FROM CD_CUR_VRSN_VW WHERE CD_ID = CD_ID_IN AND CLS_MNEMONIC = CLS_MNEMONIC_IN) > 0;
END;
$$ LANGUAGE PLPGSQL;

-- ASSERT THAT A CONCEPT HAS A SET MEMBER
-- @RETURN : TRUE IF THE CONCEPT SET CONTAINS THE CONCEPT
-- @PARAM CD_ID_IN : THE UUID FO THE CONCEPT
-- @PARAM SET_MNEMONIC_IN : THE NAME OF THE CONCEPT SET TO TEST
CREATE OR REPLACE FUNCTION IS_CD_SET_MEM(
	CD_ID_IN IN UUID,
	SET_MNEMONIC_IN IN VARCHAR(32)
) RETURNS BOOLEAN AS 
$$
BEGIN
	RETURN (SELECT COUNT(*) FROM CD_SET_MEM_VW WHERE CD_ID = CD_ID_IN AND SET_MNEMONIC = SET_MNEMONIC_IN) > 0;
END;
$$ LANGUAGE PLPGSQL;