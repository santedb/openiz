INSERT INTO CD_TBL VALUES('1A19732C-C6BD-4DBA-8931-C6D666C06BAA',TRUE);
INSERT INTO CD_SET_MEM_ASSOC_TBL (CD_ID, SET_ID) VALUES ('1A19732C-C6BD-4DBA-8931-C6D666C06BAA', 'ee16a667-2085-440a-b1e7-4032d10b9f40');
INSERT INTO CD_VRSN_TBL (CD_ID, STS_CD_ID, CRT_USR_ID, MNEMONIC, CLS_ID) VALUES ('1A19732C-C6BD-4DBA-8931-C6D666C06BAA', 'c8064cbd-fa06-4530-b430-1a52f1530c27', 'fadca076-3690-4a6e-af9e-f1cd68e8c7e8', 'Duplicate', '0d6b3439-c9be-4480-af39-eeb457c052d0');
INSERT INTO CD_NAME_TBL(CD_ID, EFFT_VRSN_SEQ_ID, LANG_CS, VAL, PHON_ALG_ID) SELECT '1A19732C-C6BD-4DBA-8931-C6D666C06BAA', VRSN_SEQ_ID, 'en', 'Duplicate Entry', '402CD339-D0E4-46CE-8FC2-12A4B0E17226' FROM CD_VRSN_TBL WHERE CD_ID = 'a87a6d21-2ca6-4aea-88f3-6135cceb58d1' AND OBSLT_UTC IS NULL;

-- DUPLICATE CAN BE ANY CLASS CODE
INSERT INTO ent_rel_vrfy_cdtbl (rel_typ_cd_id, src_cls_cd_id, trg_cls_cd_id, err_desc)
		SELECT DISTINCT '1A19732C-C6BD-4DBA-8931-C6D666C06BAA'::UUID, cd_id, cd_id, 'DUPLICATE ENTITY'
	FROM cd_set_mem_vw
	WHERE set_mnemonic = 'EntityClass';
		
CREATE TABLE ent_rel_part_dup_tbl PARTITION OF ent_rel_tbl FOR VALUES IN ('1A19732C-C6BD-4DBA-8931-C6D666C06BAA');
ALTER TABLE ent_rel_part_dup_tbl ADD CONSTRAINT pk_ent_rel_part_dup_tbl PRIMARY KEY (ent_rel_id); 
ALTER TABLE ent_rel_part_dup_tbl ADD CONSTRAINT fk_ent_rel_part_dup_trg_ent_id FOREIGN KEY (trg_ent_id) REFERENCES ent_tbl (ent_id); 
CREATE UNIQUE INDEX ent_rel_part_dup_unq_idx ON ent_rel_part_dup_tbl (digest((src_ent_id::text || trg_ent_id::text) || rel_typ_cd_id::text, 'sha1'::text)) WHERE obslt_vrsn_seq_id IS NULL;
CREATE TRIGGER ent_rel_part_dup_tbl_vrfy BEFORE INSERT OR UPDATE ON ent_rel_part_bp_cit_tbl FOR EACH ROW EXECUTE PROCEDURE trg_vrfy_ent_rel_tbl();

-- FIX DUPLICATES
CREATE OR REPLACE FUNCTION fix_duplicates() RETURNS VOID AS $$
BEGIN

	RAISE INFO 'CORRECTING % DUPLICATED IDENTIFIERS', (SELECT COUNT(*) FROM (SELECT first(ent_id_id) FROM ENT_ID_TBL 
	WHERE OBSLT_VRSN_SEQ_ID IS NULL 
	GROUP BY ent_id, aut_id, ID_VAL 
	HAVING count (ent_id_id) > 1) I);

	-- FIX IDENTIFIERS
	UPDATE ent_id_tbl SET OBSLT_VRSN_SEQ_ID = EFFT_VRSN_SEQ_ID 
	WHERE ent_id_id IN (
	SELECT first(ent_id_id) FROM ENT_ID_TBL 
	WHERE OBSLT_VRSN_SEQ_ID IS NULL 
	GROUP BY ent_id, aut_id, ID_VAL 
	HAVING count (ent_id_id) > 1);

	RAISE INFO 'CORRECTING % DUPLICATED ADDRESSES', (SELECT COUNT(*) FROM (
	SELECT first(addr_id) FROM ENT_ADDR_TBL 
		WHERE OBSLT_VRSN_SEQ_ID IS NULL 
		GROUP BY ent_id, use_cd_id
		HAVING count (addr_id) > 1) I);
	
	-- FIX ADDRESSES
	UPDATE ENT_ADDR_tbl SET OBSLT_VRSN_SEQ_ID = EFFT_VRSN_SEQ_ID 
	WHERE ADDR_ID IN (
	SELECT first(addr_id) FROM ENT_ADDR_TBL 
		WHERE OBSLT_VRSN_SEQ_ID IS NULL 
		GROUP BY ent_id, use_cd_id
		HAVING count (addr_id) > 1);
	
	RAISE INFO 'CORRECTING % DUPLICATED NAMES', (SELECT COUNT(*) FROM (
	SELECT first(NAME_ID) FROM ENT_NAME_TBL 
		WHERE OBSLT_VRSN_SEQ_ID IS NULL 
		GROUP BY ent_id, use_cd_id
		HAVING count (NAME_id) > 1) I);
	
	-- FIX NAME
	UPDATE ENT_NAME_tbl SET OBSLT_VRSN_SEQ_ID = EFFT_VRSN_SEQ_ID 
	WHERE NAME_ID IN (
	SELECT first(NAME_id) FROM ENT_NAME_TBL 
		WHERE OBSLT_VRSN_SEQ_ID IS NULL 
		GROUP BY ent_id, use_cd_id
		HAVING count (NAME_id) > 1);
	
	
	
END;
$$ LANGUAGE PLPGSQL;

-- PRUNE NULLIFIED OBJECTS
CREATE OR REPLACE FUNCTION del_nullified(since DATE) RETURNS VOID AS $$
BEGIN 
	
	RAISE INFO 'REMOVING % ENTITIES MARKED NULLFIIED', (SELECT COUNT(DISTINCT ENT_ID) 
		FROM ENT_VRSN_TBL 
		WHERE 
			STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5'
			AND OBSLT_UTC IS NULL
			AND CRT_UTC < SINCE); 
			

	-- ADDRESSES 
	RAISE INFO 'REMOVING % ASSOCIATED ADDRESSES', (SELECT COUNT(*) FROM ENT_ADDR_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_VRSN_TBL.ENT_ID = ENT_ADDR_TBL.ENT_ID AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ENT_ADDR_CMP_TBL WHERE EXISTS (SELECT 1 FROM ENT_ADDR_TBL INNER JOIN ENT_VRSN_TBL USING (ENT_ID) WHERE ent_addr_tbl.addr_id = ent_addr_cmp_tbl.addr_id AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);
	DELETE FROM ENT_ADDR_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ent_vrsn_tbl.ent_id = ent_addr_tbl.ent_id AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);

	-- NAMES
	RAISE INFO 'REMOVING % ASSOCIATED NAMES', (SELECT COUNT(*) FROM ENT_NAME_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_VRSN_TBL.ENT_ID = ENT_NAME_TBL.ENT_ID AND  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ENT_NAME_CMP_TBL WHERE EXISTS (SELECT 1 FROM ENT_name_TBL INNER JOIN ENT_VRSN_TBL USING (ENT_ID) WHERE ent_name_tbl.name_id = ent_name_cmp_tbl.name_id AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);
	DELETE FROM ENT_NAME_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ent_vrsn_tbl.ent_id = ent_name_tbl.ent_id AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);

	-- IDS
	RAISE INFO 'REMOVING % ASSOCIATED IDENTIFIERS', (SELECT COUNT(*) FROM ENT_ID_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_VRSN_TBL.ENT_ID = ENT_ID_TBL.ENT_ID AND  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ENT_ID_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_VRSN_TBL.ENT_ID = ENT_ID_TBL.ENT_ID AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);
	
	-- PARTICIPATIONS
	RAISE INFO 'REMOVING % ASSOCIATED PARTICIPATIONS', (SELECT COUNT(*) FROM ACT_PTCPT_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ACT_PTCPT_TBL.ENT_ID = ENT_vrsn_tbl.ENT_ID AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ACT_PTCPT_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ACT_PTCPT_TBL.ENT_ID = ENT_vrsn_tbl.ENT_ID AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);

	-- RELATIONSHIPS
	RAISE INFO 'REMOVING % ASSOCIATED RELATIONSHIPS (OUTBOUND)', (SELECT COUNT(*) FROM ENT_REL_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_REL_TBL.src_ENT_ID = ENT_vrsn_tbl.ENT_ID AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ENT_REL_TBL WHERE  EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_REL_TBL.src_ENT_ID = ENT_vrsn_tbl.ENT_ID AND  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);
	RAISE INFO 'REMOVING % ASSOCIATED RELATIONSHIPS (INBOUND)', (SELECT COUNT(*) FROM ent_REL_TBL WHERE  EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_REL_TBL.trg_ENT_ID = ENT_vrsn_tbl.ENT_ID AND  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ENT_REL_TBL WHERE  EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_REL_TBL.trg_ENT_ID = ENT_vrsn_tbl.ENT_ID AND  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);

	-- TAGS
	RAISE INFO 'REMOVING % ASSOCIATED TAGS', (SELECT COUNT(*) FROM ENT_TAG_TBL WHERE exists (SELECT 1 FROM ENT_VRSN_TBL WHERE ent_tag_tbl.ent_id = ent_vrsn_tbl.ent_id and STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ENT_TAG_TBL WHERE exists (SELECT 1 FROM ENT_VRSN_TBL WHERE ent_tag_tbl.ent_id = ent_vrsn_tbl.ent_id and  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);

	-- TAGS
	RAISE INFO 'REMOVING % ASSOCIATED EXTENSIONS', (SELECT COUNT(*) FROM ENT_EXT_TBL WHERE  exists (SELECT 1 FROM ENT_VRSN_TBL WHERE ent_ext_tbl.ent_id = ent_vrsn_tbl.ent_id and  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE));
	DELETE FROM ENT_EXT_TBL WHERE  exists (SELECT 1 FROM ENT_VRSN_TBL WHERE ent_ext_tbl.ent_id = ent_vrsn_tbl.ent_id and  STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);

	-- ENTITY REGISTRATION
	RAISE INFO 'CLEANING CORE TABLES FROM NULLIFIED OBJECTS';
	DELETE FROM PAT_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_VRSN_TBL.ENT_VRSN_ID = PAT_TBL.ENT_VRSN_ID AND EXISTS (SELECT 1 FROM ENT_vRSN_TBL B WHERE ENT_VRSN_TBL.ENT_ID = B.ENT_ID AND OBSLT_UTC IS NULL AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND CRT_UTC < SINCE));
	DELETE FROM PSN_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL WHERE ENT_VRSN_TBL.ENT_VRSN_ID = PSN_TBL.ENT_VRSN_ID AND EXISTS (SELECT 1 FROM ENT_vRSN_TBL B WHERE ENT_VRSN_TBL.ENT_ID = B.ENT_ID AND OBSLT_UTC IS NULL AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND CRT_UTC < SINCE));
	DELETE FROM ENT_VRSN_TBL WHERE EXISTS (SELECT 1 FROM ENT_VRSN_TBL B WHERE ENT_VRSN_TBL.ENT_ID = b.ENT_ID AND STS_CD_ID = 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5' AND OBSLT_utc IS NULL AND CRT_UTC < SINCE);
	DELETE FROM ENT_TBL WHERE NOT ENT_ID NOT IN (SELECT DISTINCT ENT_ID FROM ENT_VRSN_TBL);

END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION squash_db() RETURNS VOID AS $$
DECLARE 
	DBS NUMERIC;
BEGIN

	RAISE INFO '  O O   \ /';
	RAISE INFO '   X     X ';
	RAISE INFO '  / \   O O';
	RAISE INFO 'PRUNING DATABASE STARTED - THIS WILL REMOVE ALL OBSOLETE DATA FROM DATABASE';
	RAISE INFO 'DEPENDING ON THE SIZE OF YOUR DATASET THIS MAY TAKE UP TO 30 MINUTES';
	select pg_database_size(current_database()) INTO DBS;
	RAISE INFO 'CURRENT DB SIZE: %', pg_size_pretty(DBS);

	
	RAISE INFO 'PRUNING % ADDRESSES', (SELECT COUNT(*) FROM ENT_ADDR_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL);
	DELETE FROM ENT_ADDR_CMP_TBL WHERE ADDR_ID IN (SELECT ADDR_ID FROM ENT_ADDR_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL);
	DELETE FROM ENT_ADDR_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL;

	-- NO CURRENT VERSIONS EXIST?
	DELETE FROM ENT_ADDR_CMP_TBL WHERE ADDR_ID IN (SELECT ADDR_ID FROM ENT_ADDR_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_ADDR_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL);
	DELETE FROM ENT_ADDR_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_ADDR_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL;
	RAISE INFO 'REDIRECTING ADDRESSES';
	UPDATE ENT_ADDR_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_ADDR_TBL.ENT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING % NAMES', (SELECT COUNT(*) FROM ENT_NAME_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL);
	DELETE FROM ENT_NAME_CMP_TBL WHERE NAME_ID IN (SELECT NAME_ID FROM ENT_NAME_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL);
	DELETE FROM ENT_NAME_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL;
	-- NO CURRENT VERSIONS EXIST?
	DELETE FROM ENT_NAME_CMP_TBL WHERE NAME_ID IN (SELECT NAME_ID FROM ENT_NAME_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_NAME_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL);
	DELETE FROM ENT_NAME_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_NAME_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL;
	
	RAISE INFO 'REDIRECTING NAMES';
	UPDATE ENT_NAME_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_NAME_TBL.ENT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING % IDENTIFIERS', (SELECT COUNT(*) FROM ENT_ID_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL) +
	 (SELECT COUNT(*) FROM ENT_ID_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_ID_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL) + 
	 (SELECT COUNT(*) FROM ENT_ID_TBL WHERE EXISTS (SELECT * FROM ENT_ID_TBL B WHERE ENT_ID_TBL.EFFT_VRSN_SEQ_ID <> B.EFFT_VRSN_SEQ_ID AND ENT_ID_TBL.ENT_ID = B.ENT_ID AND B.EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = B.ENT_ID LIMIT 1) AND B.AUT_ID = ENT_ID_TBL.AUT_ID AND B.ID_VAL = ENT_ID_TBL.ID_VAL));
	DELETE FROM ENT_ID_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL;
	DELETE FROM ENT_ID_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_ID_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL;
	DELETE FROM ENT_ID_TBL WHERE EXISTS (SELECT * FROM ENT_ID_TBL B WHERE ENT_ID_TBL.EFFT_VRSN_SEQ_ID <> B.EFFT_VRSN_SEQ_ID AND ENT_ID_TBL.ENT_ID = B.ENT_ID AND B.EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = B.ENT_ID LIMIT 1) AND B.AUT_ID = ENT_ID_TBL.AUT_ID AND B.ID_VAL = ENT_ID_TBL.ID_VAL);
	RAISE INFO 'REDIRECTING IDENTIFIERS';
	UPDATE ENT_ID_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_ID_TBL.ENT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING % TELECOM ADDRESSES', (SELECT COUNT(*) FROM ENT_TEL_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL);
	DELETE FROM ENT_TEL_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL;

	RAISE INFO 'REDIRECTING TELECOM ADDRESSES';
	UPDATE ENT_TEL_TBL  SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_TEL_TBL.ENT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING % EXTENSIONS', (SELECT COUNT(*) FROM ENT_EXT_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL) +
		(SELECT COUNT (*) FROM ENT_EXT_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_EXT_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL)
	;
	DELETE FROM ENT_EXT_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL;
	DELETE FROM ENT_EXT_TBL WHERE NOT EXISTS(SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_EXT_TBL.ENT_ID) AND OBSLT_VRSN_SEQ_ID IS NULL;
	RAISE INFO 'REDIRECTING EXTENSIONS';
	UPDATE ENT_EXT_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_EXT_TBL.ENT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING PATIENTS';
	DELETE FROM PAT_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);

	RAISE INFO 'PRUNING PROVIDERS';
	DELETE FROM PVDR_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);

	RAISE INFO 'PRUNING USERS';
	DELETE FROM USR_ENT_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);

	RAISE INFO 'PRUNING PERSONS';
	DELETE FROM PSN_LNG_TBL WHERE OBSLT_VRSN_SEQ_ID  IS NOT NULL;
	UPDATE PSN_LNG_TBL  SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = PSN_LNG_TBL.ENT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);
	DELETE FROM PSN_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);

	RAISE INFO 'PRUNING PLACES';
	DELETE FROM PLC_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);

	RAISE INFO 'PRUNING ORGANIZATIONS';
	DELETE FROM ORG_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);

	RAISE INFO 'PRUNING MATERIALS';
	DELETE FROM MMAT_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);
	DELETE FROM MAT_TBL WHERE ENT_VRSN_ID IN (SELECT ENT_VRSN_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC  IS NOT NULL);

	RAISE INFO 'PRUNING ENTITY RELATIONSHIPS';
	DELETE FROM ENT_REL_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL;
	RAISE INFO 'REDIRECTING % ENTITY RELATIONSHIPS', (SELECT COUNT(*) FROM ENT_REL_TBL WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL));
	UPDATE ENT_REL_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ENT_ID = ENT_REL_TBL.SRC_ENT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'DISABLING TRIGGERS';
	ALTER TABLE ENT_ADDR_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ENT_NAME_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ENT_ID_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ENT_TEL_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ENT_EXT_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ENT_REL_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ENT_VRSN_TBL DISABLE TRIGGER ALL;

	-- DELETE FROM ENT VRSN TBL 
	RAISE INFO 'REWRITING ENTITY VERSION TREE';
	UPDATE ENT_VRSN_TBL SET RPLC_VRSN_ID = NULL WHERE OBSLT_UTC IS NULL AND RPLC_VRSN_ID IS NULL;
	RAISE INFO 'PRUNING % ENTITY VERSION TREE ENTRIES', (SELECT COUNT(*) FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);
	DELETE FROM ENT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL ;

	RAISE INFO 'ENABLING TRIGGERS';
	ALTER TABLE ENT_VRSN_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ENT_ADDR_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ENT_NAME_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ENT_ID_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ENT_TEL_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ENT_REL_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ENT_EXT_TBL ENABLE TRIGGER ALL;

	RAISE INFO 'PRUNING ACT IDENTIFIERS';
	DELETE FROM ACT_ID_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL;
	RAISE INFO 'REDIRECTING ACT IDENTIFIERS';
	UPDATE ACT_ID_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ACT_ID = ACT_ID_TBL.ACT_ID LIMIT 1) WHERE OBSLT_VRSN_SEQ_ID IS NULL AND EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING ACT EXTENSIONS';
	DELETE FROM ACT_EXT_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL;
	RAISE INFO 'REDIRECTING ACT EXTENSIONS';
	UPDATE ACT_EXT_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ACT_ID = ACT_EXT_TBL.ACT_ID LIMIT 1) WHERE OBSLT_VRSN_SEQ_ID IS NULL AND EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING OBSERVATIONS';
	DELETE FROM QTY_OBS_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);
	DELETE FROM TXT_OBS_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE  OBSLT_UTC IS NOT NULL );
	DELETE FROM CD_OBS_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE  OBSLT_UTC IS NOT NULL );
	DELETE FROM OBS_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE  OBSLT_UTC IS NOT NULL );

	RAISE INFO 'PRUNING SUBSTANCE ADMINISTRATIONS';
	DELETE FROM SUB_ADM_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE  OBSLT_UTC IS NOT NULL );

	RAISE INFO 'PRUNING ENCOUNTERS';
	DELETE FROM PAT_ENC_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE  OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING PROCEDURES';
	DELETE FROM PROC_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE  OBSLT_UTC IS NOT NULL );

	ALTER TABLE ACT_REL_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ACT_PTCPT_TBL DISABLE TRIGGER ALL;
	ALTER TABLE ACT_VRSN_TBL DISABLE TRIGGER ALL;

	RAISE INFO 'PRUNING ACT RELATIONSHIPS';
	DELETE FROM ACT_REL_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL;
	RAISE INFO 'REDIRECTING % ACT RELATIONSHIPS', (SELECT COUNT(*) FROM ACT_REL_TBL WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL));
	UPDATE ACT_REL_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ACT_ID = ACT_REL_TBL.SRC_ACT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'PRUNING ACT PARTICIPATIONS';
	DELETE FROM ACT_PTCPT_TBL WHERE OBSLT_VRSN_SEQ_ID IS NOT NULL;
	RAISE INFO 'REDIRECTING % ACT PARTICIPATIONS', (SELECT COUNT(*) FROM ACT_PTCPT_TBL WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL));
	UPDATE ACT_PTCPT_TBL SET EFFT_VRSN_SEQ_ID = (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NULL AND ACT_ID = ACT_PTCPT_TBL.ACT_ID LIMIT 1) WHERE EFFT_VRSN_SEQ_ID IN (SELECT VRSN_SEQ_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL);

	RAISE INFO 'REWRITING ACT VERSION TREE';
	UPDATE ACT_VRSN_TBL SET RPLC_VRSN_ID = NULL WHERE OBSLT_UTC IS NULL AND RPLC_VRSN_ID IS NULL;
	RAISE INFO 'PRUNING % ACT VERSION TREE ENTRIES', (SELECT COUNT(*) FROM ACT_VRSN_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL ));
	DELETE FROM ACT_VRSN_TBL WHERE ACT_VRSN_ID IN (SELECT ACT_VRSN_ID FROM ACT_VRSN_TBL WHERE OBSLT_UTC IS NOT NULL );

	ALTER TABLE ACT_REL_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ACT_PTCPT_TBL ENABLE TRIGGER ALL;
	ALTER TABLE ACT_VRSN_TBL ENABLE TRIGGER ALL;

	RAISE INFO 'PRUNING COMPLETED';
	select pg_database_size(current_database()) INTO DBS;
	RAISE INFO 'DB SIZE: % (RUNNING VACUUM FULL IS RECOMMENDED)', pg_size_pretty(DBS);

END;
$$ LANGUAGE plpgsql;

INSERT INTO ent_rel_vrfy_cdtbl (rel_typ_cd_id, src_cls_cd_id, trg_cls_cd_id, err_desc) VALUES ('f3ef7e48-d8b7-4030-b431-aff7e0e1cb76','9de2a846-ddf2-4ebc-902e-84508c5089ea', '48b2ffb3-07db-47ba-ad73-fc8fb8502471', 'Person==[Birthplace]==>Country');
INSERT INTO ent_rel_vrfy_cdtbl (rel_typ_cd_id, src_cls_cd_id, trg_cls_cd_id, err_desc) VALUES ('f3ef7e48-d8b7-4030-b431-aff7e0e1cb76','9de2a846-ddf2-4ebc-902e-84508c5089ea', '21ab7873-8ef3-4d78-9c19-4582b3c40631', 'Person==[Birthplace]==>Place');
INSERT INTO ent_rel_vrfy_cdtbl (rel_typ_cd_id, src_cls_cd_id, trg_cls_cd_id, err_desc) VALUES ('f3ef7e48-d8b7-4030-b431-aff7e0e1cb76','9de2a846-ddf2-4ebc-902e-84508c5089ea', 'd9489d56-ddac-4596-b5c6-8f41d73d8dc5', 'Person==[Birthplace]==>County');
INSERT INTO ent_rel_vrfy_cdtbl (rel_typ_cd_id, src_cls_cd_id, trg_cls_cd_id, err_desc) VALUES ('f3ef7e48-d8b7-4030-b431-aff7e0e1cb76','9de2a846-ddf2-4ebc-902e-84508c5089ea', '05b85461-578b-4988-bca6-e3e94be9db76', 'Person==[Birthplace]==>City');
INSERT INTO ent_rel_vrfy_cdtbl (rel_typ_cd_id, src_cls_cd_id, trg_cls_cd_id, err_desc) VALUES ('f3ef7e48-d8b7-4030-b431-aff7e0e1cb76','9de2a846-ddf2-4ebc-902e-84508c5089ea', '8cf4b0b0-84e5-4122-85fe-6afa8240c218', 'Person==[Birthplace]==>State');

 -- GET THE SCHEMA VERSION
CREATE OR REPLACE FUNCTION GET_SCH_VRSN() RETURNS VARCHAR(10) AS
$$
BEGIN
	RETURN '1.0.0.0';
END;
$$ LANGUAGE plpgsql;	